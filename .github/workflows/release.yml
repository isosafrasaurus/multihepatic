name: Build and release image of repo contents

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push the built image to the docker registry? (yes or no, default no)"
        required: false
        default: "no"

env:
  IMAGE_PREFIX: ghcr.io/isosafrasaurus/3d-1d

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine whether to push the image
        id: push
        run: |
          PUSH=${{ github.event.inputs.push }}
          if [[ "$PUSH" == "yes" ]]; then
            echo "push=yes" >> $GITHUB_OUTPUT
          else
            echo "push=no" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Get latest base image tag from GHCR
        id: base_tag
        run: |
          BASE_TAG=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/isosafrasaurus/packages/container/fenics/versions" | \
            jq -r '.[0].metadata.container.tags[0]')
          
          if [ -z "$BASE_TAG" ]; then
            echo "Error: No tag found for the base image." >&2
            exit 1
          fi

          echo "base_tag=$BASE_TAG" >> $GITHUB_OUTPUT
          echo "Using base image tag: $BASE_TAG"
        shell: bash

      - name: Create Dockerfile for new image
        run: |
          cat <<'EOF' > Dockerfile.fenics
          FROM ghcr.io/isosafrasaurus/fem-on-jupyter/fenics:${{ steps.base_tag.outputs.base_tag }}
          COPY . /root
          EOF

      - name: Build docker image
        run: |
          docker build --pull -t ${IMAGE_PREFIX}:latest -f Dockerfile.fenics .

      - name: Determine image tag from latest commit
        id: image_tag
        run: |
          COMMIT_TAG=$(git rev-parse --short HEAD)
          echo "commit_tag=$COMMIT_TAG" >> $GITHUB_OUTPUT
          echo "Image will be tagged with: $COMMIT_TAG"
        shell: bash

      - name: Log into GitHub Container Registry
        if: steps.push.outputs.push == 'yes'
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag and push docker image
        if: steps.push.outputs.push == 'yes'
        run: |
          COMMIT_TAG=${{ steps.image_tag.outputs.commit_tag }}
          docker tag ${IMAGE_PREFIX}:latest ${IMAGE_PREFIX}:${COMMIT_TAG}
          docker push ${IMAGE_PREFIX}:latest
          docker push ${IMAGE_PREFIX}:${COMMIT_TAG}
